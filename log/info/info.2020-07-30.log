2020-07-30 00:09:18 INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication on DESKTOP-PHMKGBV with PID 66752 (E:\myproject\FEBS-Shiro-2.0\target\classes started by 94119 in E:\myproject\FEBS-Shiro-2.0)
2020-07-30 00:09:18 INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-07-30 00:09:21 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-30 00:09:21 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-30 00:09:21 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$84a00168] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$85d8b013] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$86919240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [cc.mrbird.febs.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$826f36c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [cc.mrbird.febs.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [cc.mrbird.febs.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$58d9fd31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-07-30 00:09:21 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-07-30 00:09:22 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-07-30 00:09:22 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-07-30 00:09:22 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-07-30 00:09:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-07-30 00:09:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-07-30 00:09:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-07-30 00:09:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-07-30 00:09:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-07-30 00:09:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [cc.mrbird.febs.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy130] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:09:23 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-07-30 00:09:23 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-07-30 00:09:23 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-07-30 00:09:23 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-30 00:09:24 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-07-30 00:09:24 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 5095 ms
2020-07-30 00:09:24 INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-07-30 00:09:24 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-07-30 00:09:24 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-30 00:09:24 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-07-30 00:09:24 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-07-30 00:09:24 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-07-30 00:09:24 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'DESKTOP-PHMKGBV1596038964865'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-30 00:09:24 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-07-30 00:09:24 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-07-30 00:09:24 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@87f1201
2020-07-30 00:09:24 INFO  main p6spy 2020-07-30 00:09:24 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-30 00:09:25 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-30 00:09:25 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-30 00:09:25 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-07-30 00:09:25 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-07-30 00:09:26 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-07-30 00:09:26 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-07-30 00:09:26 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_4
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_5
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_6
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_7
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_8
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: logUsingGET_1
2020-07-30 00:09:26 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: onlineUsingGET_1
2020-07-30 00:09:26 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-07-30 00:09:26 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-07-30 00:09:27 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-07-30 00:09:27 INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 8.701 seconds (JVM running for 10.1)
2020-07-30 00:09:27 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2020-07-30 00:09:27 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2020-07-30 00:09:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-30 00:09:27 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_DESKTOP-PHMKGBV1596038964865 started.
2020-07-30 00:09:28 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-07-30 00:09:28 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-30 00:09:28 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-30 00:09:28 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-07-30 00:09:28 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner 系统启动完毕，地址：http://192.168.137.1:8080/login
2020-07-30 00:09:28 INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-30 00:09:28 INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-07-30 00:09:28 INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 46 ms
2020-07-30 00:09:28 INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-07-30 00:09:30 INFO  http-nio-8080-exec-2 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.137.1 第 1 次访问key为 [limit_get_captcha192.168.137.1]，描述为 [获取验证码] 的接口
2020-07-30 00:09:31 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:09:31 | 耗时 5 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-07-30 00:09:31 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:09:31 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-07-30 00:09:31 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:09:31 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-07-30 00:09:32 INFO  http-nio-8080-exec-7 p6spy 2020-07-30 00:09:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-07-30 00:09:33 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:09:33 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:09:33 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:09:33 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:09:34 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:09:34 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 4;
2020-07-30 00:09:39 INFO  http-nio-8080-exec-4 p6spy 2020-07-30 00:09:39 | 耗时 1 ms | SQL 语句：
UPDATE customertable SET NAME = '张三', PHONE = 15322223334, vehicle_id = 22 WHERE CUSTOMER_ID = 4;
2020-07-30 00:09:39 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:09:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:09:39 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:09:39 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:09:40 INFO  Febs-Async-Thread1 p6spy 2020-07-30 00:09:40 | 耗时 6 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改客户', 44, 'cc.mrbird.febs.system.controller.CustomerController.updateCustomer()', ' customer: "Customer(customerId=4, name=张三, gender=null, phone=15322223334, purchasingDate=null, vehicleId=22, purchasingDateFrom=null, purchasingDateTo=null)"', '192.168.137.1', '2020-07-30T00:09:39.962+0800', '内网IP|0|0|内网IP|内网IP');
2020-07-30 00:09:42 INFO  QuartzScheduler_FEBS_Scheduler-DESKTOP-PHMKGBV1596038964865_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-07-30 00:09:42 INFO  QuartzScheduler_FEBS_Scheduler-DESKTOP-PHMKGBV1596038964865_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-PHMKGBV1596038332257"'s failed in-progress jobs.
2020-07-30 00:09:44 INFO  http-nio-8080-exec-7 p6spy 2020-07-30 00:09:44 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 4;
2020-07-30 00:09:53 INFO  http-nio-8080-exec-8 p6spy 2020-07-30 00:09:53 | 耗时 1 ms | SQL 语句：
UPDATE customertable SET NAME = '张三', PHONE = 15322223334, vehicle_id = 22 WHERE CUSTOMER_ID = 4;
2020-07-30 00:09:53 INFO  Febs-Async-Thread2 p6spy 2020-07-30 00:09:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改客户', 7, 'cc.mrbird.febs.system.controller.CustomerController.updateCustomer()', ' customer: "Customer(customerId=4, name=张三, gender=null, phone=15322223334, purchasingDate=null, vehicleId=22, purchasingDateFrom=null, purchasingDateTo=null)"', '192.168.137.1', '2020-07-30T00:09:53.102+0800', '内网IP|0|0|内网IP|内网IP');
2020-07-30 00:09:53 INFO  http-nio-8080-exec-9 p6spy 2020-07-30 00:09:53 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:09:53 INFO  http-nio-8080-exec-9 p6spy 2020-07-30 00:09:53 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:10:31 INFO  http-nio-8080-exec-2 p6spy 2020-07-30 00:10:31 | 耗时 9 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 4;
2020-07-30 00:10:59 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:10:59 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-07-30 00:10:59 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:10:59 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-07-30 00:10:59 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:10:59 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-07-30 00:11:00 INFO  http-nio-8080-exec-7 p6spy 2020-07-30 00:11:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-07-30 00:11:00 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:11:00 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:11:00 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:11:00 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:11:02 INFO  http-nio-8080-exec-2 p6spy 2020-07-30 00:11:02 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 4;
2020-07-30 00:11:09 INFO  http-nio-8080-exec-4 p6spy 2020-07-30 00:11:09 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 4;
2020-07-30 00:14:35 INFO  main cc.mrbird.febs.FebsShiroApplication Starting FebsShiroApplication on DESKTOP-PHMKGBV with PID 71164 (E:\myproject\FEBS-Shiro-2.0\target\classes started by 94119 in E:\myproject\FEBS-Shiro-2.0)
2020-07-30 00:14:35 INFO  main cc.mrbird.febs.FebsShiroApplication The following profiles are active: dev
2020-07-30 00:14:36 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-30 00:14:36 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-30 00:14:37 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 45ms. Found 0 Redis repository interfaces.
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$83622f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [cc.mrbird.febs.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$849addb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8553bfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [cc.mrbird.febs.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$81316463] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [cc.mrbird.febs.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [cc.mrbird.febs.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$579c2ad0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-07-30 00:14:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-07-30 00:14:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-07-30 00:14:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-07-30 00:14:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [quartz] wrap p6spy plugin
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [quartz] success
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-07-30 00:14:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [2] datasource,primary datasource named [base]
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:37 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:38 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [cc.mrbird.febs.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy130] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-30 00:14:39 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8080 (http)
2020-07-30 00:14:39 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8080"]
2020-07-30 00:14:39 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-07-30 00:14:39 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-30 00:14:39 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-07-30 00:14:39 INFO  main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 3799 ms
2020-07-30 00:14:40 INFO  main cc.mrbird.febs.common.xss.XssFilter ------------ xss filter init ------------
2020-07-30 00:14:40 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-07-30 00:14:40 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-30 00:14:40 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-07-30 00:14:40 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-07-30 00:14:40 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-07-30 00:14:40 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FEBS_Scheduler' with instanceId 'DESKTOP-PHMKGBV1596039280360'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-30 00:14:40 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FEBS_Scheduler' initialized from an externally provided properties instance.
2020-07-30 00:14:40 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-07-30 00:14:40 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@77648321
2020-07-30 00:14:40 INFO  main p6spy 2020-07-30 00:14:40 | 耗时 14 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-30 00:14:41 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-30 00:14:41 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-30 00:14:41 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-07-30 00:14:41 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-07-30 00:14:41 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-07-30 00:14:41 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'scheduleJobExecutorService'
2020-07-30 00:14:41 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-07-30 00:14:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_4
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_5
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_6
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_7
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_8
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: logUsingGET_1
2020-07-30 00:14:42 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: onlineUsingGET_1
2020-07-30 00:14:42 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FEBS_Scheduler] in 1 seconds
2020-07-30 00:14:42 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8080"]
2020-07-30 00:14:42 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8080 (http) with context path ''
2020-07-30 00:14:42 INFO  main cc.mrbird.febs.FebsShiroApplication Started FebsShiroApplication in 7.273 seconds (JVM running for 8.926)
2020-07-30 00:14:42 INFO  main io.lettuce.core.EpollProvider Starting without optional epoll library
2020-07-30 00:14:42 INFO  main io.lettuce.core.KqueueProvider Starting without optional kqueue library
2020-07-30 00:14:43 INFO  Quartz Scheduler [FEBS_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-30 00:14:43 INFO  Quartz Scheduler [FEBS_Scheduler] org.quartz.core.QuartzScheduler Scheduler FEBS_Scheduler_$_DESKTOP-PHMKGBV1596039280360 started.
2020-07-30 00:14:43 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-07-30 00:14:43 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-30 00:14:43 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-30 00:14:43 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner                                                       
2020-07-30 00:14:43 INFO  main cc.mrbird.febs.common.runner.FebsStartedUpRunner 系统启动完毕，地址：http://192.168.137.1:8080/login
2020-07-30 00:14:43 INFO  http-nio-8080-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-30 00:14:43 INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-07-30 00:14:44 INFO  http-nio-8080-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-07-30 00:14:44 INFO  http-nio-8080-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-07-30 00:14:45 INFO  http-nio-8080-exec-3 cc.mrbird.febs.common.aspect.LimitAspect IP:192.168.137.1 第 1 次访问key为 [limit_get_captcha192.168.137.1]，描述为 [获取验证码] 的接口
2020-07-30 00:14:46 INFO  http-nio-8080-exec-2 p6spy 2020-07-30 00:14:46 | 耗时 15 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird';
2020-07-30 00:14:46 INFO  http-nio-8080-exec-2 p6spy 2020-07-30 00:14:46 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'MrBird' AND m.perms IS NOT NULL AND m.perms <> '';
2020-07-30 00:14:46 INFO  http-nio-8080-exec-2 p6spy 2020-07-30 00:14:46 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'MrBird' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-07-30 00:14:47 INFO  http-nio-8080-exec-7 p6spy 2020-07-30 00:14:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'MrBird') ORDER BY m.order_num;
2020-07-30 00:14:47 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:14:47 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:14:47 INFO  http-nio-8080-exec-10 p6spy 2020-07-30 00:14:47 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:14:58 INFO  QuartzScheduler_FEBS_Scheduler-DESKTOP-PHMKGBV1596039280360_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-07-30 00:14:58 INFO  QuartzScheduler_FEBS_Scheduler-DESKTOP-PHMKGBV1596039280360_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-PHMKGBV1596038964865"'s failed in-progress jobs.
2020-07-30 00:15:21 INFO  http-nio-8080-exec-4 p6spy 2020-07-30 00:15:21 | 耗时 10 ms | SQL 语句：
INSERT INTO customertable (NAME, GENDER, PHONE, PURCHASING_DATE, vehicle_id) VALUES ('王五', '0', 12345678900, '2020-07-30T10:00:03.000+0800', 22);
2020-07-30 00:15:21 INFO  Febs-Async-Thread1 p6spy 2020-07-30 00:15:21 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '新增客户', 55, 'cc.mrbird.febs.system.controller.CustomerController.createCustomer()', ' customer: "Customer(customerId=5, name=王五, gender=0, phone=12345678900, purchasingDate=Thu Jul 30 10:00:03 CST 2020, vehicleId=22, purchasingDateFrom=null, purchasingDateTo=null)"', '192.168.137.1', '2020-07-30T00:15:21.950+0800', '内网IP|0|0|内网IP|内网IP');
2020-07-30 00:15:21 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:15:21 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:15:21 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:15:21 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:15:24 INFO  http-nio-8080-exec-8 p6spy 2020-07-30 00:15:24 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 5;
2020-07-30 00:15:27 INFO  http-nio-8080-exec-7 p6spy 2020-07-30 00:15:27 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 5;
2020-07-30 00:15:32 INFO  http-nio-8080-exec-9 p6spy 2020-07-30 00:15:32 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE c.customer_id = 5;
2020-07-30 00:15:39 INFO  http-nio-8080-exec-1 p6spy 2020-07-30 00:15:39 | 耗时 10 ms | SQL 语句：
UPDATE customertable SET NAME = '王五', PHONE = 12345678901, vehicle_id = 22 WHERE CUSTOMER_ID = 5;
2020-07-30 00:15:39 INFO  Febs-Async-Thread2 p6spy 2020-07-30 00:15:39 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '修改客户', 20, 'cc.mrbird.febs.system.controller.CustomerController.updateCustomer()', ' customer: "Customer(customerId=5, name=王五, gender=null, phone=12345678901, purchasingDate=null, vehicleId=22, purchasingDateFrom=null, purchasingDateTo=null)"', '192.168.137.1', '2020-07-30T00:15:39.801+0800', '内网IP|0|0|内网IP|内网IP');
2020-07-30 00:15:39 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:15:39 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:15:39 INFO  http-nio-8080-exec-3 p6spy 2020-07-30 00:15:39 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
2020-07-30 00:15:44 INFO  http-nio-8080-exec-4 p6spy 2020-07-30 00:15:44 | 耗时 1 ms | SQL 语句：
DELETE FROM customertable WHERE CUSTOMER_ID IN ('5');
2020-07-30 00:15:44 INFO  Febs-Async-Thread3 p6spy 2020-07-30 00:15:44 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('MrBird', '删除客户', 18, 'cc.mrbird.febs.system.controller.CustomerController.deleteCustomers()', ' customerIds: "5"', '192.168.137.1', '2020-07-30T00:15:44.201+0800', '内网IP|0|0|内网IP|内网IP');
2020-07-30 00:15:44 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:15:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM customertable c WHERE 1 = 1;
2020-07-30 00:15:44 INFO  http-nio-8080-exec-5 p6spy 2020-07-30 00:15:44 | 耗时 0 ms | SQL 语句：
SELECT c.customer_id customerId, c.name, c.gender, c.phone, c.purchasing_date purchasingDate, c.vehicle_id vehicleId FROM customertable c WHERE 1 = 1 ORDER BY customerId ASC LIMIT 0,10;
